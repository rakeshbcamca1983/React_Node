{"ast":null,"code":"var _jsxFileName = \"D:\\\\techved_app\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [token, setToken] = useState('');\n  const [expire, setExpire] = useState('');\n  const [users, setUsers] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    refreshToken();\n    getUsers();\n  }, []);\n\n  const refreshToken = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/token');\n      setToken(response.data.accessToken);\n      const decoded = jwt_decode(response.data.accessToken);\n      setName(decoded.name);\n      setExpire(decoded.exp);\n    } catch (error) {\n      if (error.response) {\n        history.push(\"/\");\n      }\n    }\n  };\n\n  const axiosJWT = axios.create();\n  axiosJWT.interceptors.request.use(async config => {\n    const currentDate = new Date();\n\n    if (expire * 1000 < currentDate.getTime()) {\n      const response = await axios.get('http://localhost:5000/token');\n      config.headers.Authorization = `Bearer ${response.data.accessToken}`;\n      setToken(response.data.accessToken);\n      const decoded = jwt_decode(response.data.accessToken);\n      setName(decoded.name);\n      setExpire(decoded.exp);\n    }\n\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n\n  const getUsers = async () => {\n    const response = await axiosJWT.get('http://localhost:5000/users', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    setUsers(response.data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome Back: \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getUsers,\n      className: \"button is-info\",\n      children: \"Get Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table is-striped is-fullwidth\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map((user, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"tK6oJFAwiE7tePEyOn3hbBdQAJc=\", false, function () {\n  return [useHistory];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["D:/techved_app/frontend/src/components/Dashboard.js"],"names":["React","useState","useEffect","axios","jwt_decode","useHistory","Dashboard","name","setName","token","setToken","expire","setExpire","users","setUsers","history","refreshToken","getUsers","response","get","data","accessToken","decoded","exp","error","push","axiosJWT","create","interceptors","request","use","config","currentDate","Date","getTime","headers","Authorization","Promise","reject","map","user","index","email","id"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios';\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from 'react-router-dom';\n\nconst Dashboard = () => {\n    const [name, setName] = useState('');\n    const [token, setToken] = useState('');\n    const [expire, setExpire] = useState('');\n    const [users, setUsers] = useState([]);\n    const history = useHistory();\n\n    useEffect(() => {\n        refreshToken();\n        getUsers();\n    }, []);\n\n    const refreshToken = async () => {\n        try {\n            const response = await axios.get('http://localhost:5000/token');\n            setToken(response.data.accessToken);\n            const decoded = jwt_decode(response.data.accessToken);\n            setName(decoded.name);\n            setExpire(decoded.exp);\n        } catch (error) {\n            if (error.response) {\n                history.push(\"/\");\n            }\n        }\n    }\n\n    const axiosJWT = axios.create();\n\n    axiosJWT.interceptors.request.use(async (config) => {\n        const currentDate = new Date();\n        if (expire * 1000 < currentDate.getTime()) {\n            const response = await axios.get('http://localhost:5000/token');\n            config.headers.Authorization = `Bearer ${response.data.accessToken}`;\n            setToken(response.data.accessToken);\n            const decoded = jwt_decode(response.data.accessToken);\n            setName(decoded.name);\n            setExpire(decoded.exp);\n        }\n        return config;\n    }, (error) => {\n        return Promise.reject(error);\n    });\n\n    const getUsers = async () => {\n        const response = await axiosJWT.get('http://localhost:5000/users', {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        });\n        setUsers(response.data);\n    }\n\n    return (\n        <div className=\"container mt-5\">\n              \n            <h1>Welcome Back: {name}</h1>\n            <button onClick={getUsers} className=\"button is-info\">Get Users</button>\n            <table className=\"table is-striped is-fullwidth\">\n                <thead>\n                    <tr>\n                        <th>No</th>\n                        <th>Name</th>\n                        <th>Email</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {users.map((user, index) => (\n                        <tr key={user.id}>\n                            <td>{index + 1}</td>\n                            <td>{user.name}</td>\n                            <td>{user.email}</td>\n                        </tr>\n                    ))}\n\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default Dashboard\n"]},"metadata":{},"sourceType":"module"}